####	Config from https://github.com/eustasy/certbot-with-nginx
# Replace "example.com" with your domain.
# Search for [WARNING] to find common warnings.
# Search for [OPTION] to find options.
# [DEFAULT] denotes a default option choice.



####	HTTP Redirection & Verification Block
include nginx.verify.conf;



####	HTTPS Redirection Block
server {

	####	Listen Directive
	# [OPTION] HTTP2 or SPDY dependent on your Nginx version.
	# [WARNING] Making an incorrect selection will result in a non-working site.

	# Option 1. [DEFAULT] HTTP2 for Nginx >= 1.9.5
	listen 443 deferred ssl http2;
	listen [::]:443 deferred ssl http2;

	# Option 2. SPDY for Nginx < 1.9.5
	#listen 443 deferred ssl spdy;
	#listen [::]:443 deferred ssl spdy;
	#spdy_headers_comp 9;


	####	Core Configuration
	# [OPTION] Server Name
	server_name example.com;


	####	Logs
	# [OPTION] Set access log location.
	# [DEFAULT] off;
	access_log off;

	# [OPTION] Set error log location.
	error_log /var/log/nginx/example.com.log notice;


	####	Redirection from www.HTTPS to root.HTTPS
	# [OPTION] Server Name
	location / {
		return 301 https://example.com$request_uri;
	}


	####	Let's Encrypt Pass-Through
	include nginx.well-known.conf;


	####	SSL Inclusion
	include nginx.ssl.conf;

}



####	Main HTTPS Block
server {

	####	Listen Directive
	# [OPTION] HTTP2 or SPDY dependent on your Nginx version.
	# [WARNING] Making an incorrect selection will result in a non-working site.

	# Option 1. [DEFAULT] HTTP2 for Nginx >= 1.9.5
	listen 443 deferred ssl http2;
	listen [::]:443 deferred ssl http2;

	# Option 2. SPDY for Nginx < 1.9.5
	#listen 443 deferred ssl spdy;
	#listen [::]:443 deferred ssl spdy;
	#spdy_headers_comp 9;


	####	Core Configuration
	# [OPTION] Server Name
	server_name example.com;

	# [OPTION] Root Path
	root /path/to/example.com;

	# [OPTION] Index Entries
	index index.php index.html index.htm;

	# [OPTION] Automatic Indexes
	autoindex off;


	####	Logs
	# [OPTION] Set access log location.
	# [DEFAULT] off;
	access_log off;

	# [OPTION] Set error log location.
	error_log /var/log/nginx/example.com.log notice;


	####	Let's Encrypt Pass-Through
	location '/.well-known/acme-challenge' {
		default_type 'text/plain';
		root /tmp/certbot-with-nginx;
	}


	####	Extensionless PHP

	# Try static files, then extensionless PHP.
	location / {
		try_files $uri $uri/ @extensionless-php;
	}

	# Enable extensionless PHP
	location @extensionless-php {
		rewrite ^(.*)$ $1.php last;
	}


	####	Caching & Hidden Files

	# Cache Static Files
	location ~* \.(html|css|js|png|jpg|jpeg|gif|ico|svg|eot|woff|ttf)$ { expires max; }

	# Do not allow access to hidden files.
	location ~ /\. { deny all; }
	location ~ /\_ { deny all; }


	####	GZip
	gzip on;
	gzip_vary on;
	gzip_types text/css text/javascript text/plain text/xml application/json application/x-javascript application/xml application/xml+rss

	# [OPTION] Enable to increase compresssion slightly. Sacrifices CPU.
	#gzip_comp_level 9;


	####	PHP
	location ~ \.php$ {
		try_files $uri =404;
		include /etc/nginx/fastcgi_params;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_index index.php;
		include /etc/nginx/fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

		# [OPTION] Specify PHP version for Socket.

		# Option 1. [DEFAULT] PHP 7.0
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;

		# Option 2. PHP 5
		#fastcgi_pass unix:/var/run/php5-fpm.sock;

	}



	####	Let's Encrypt Pass-Through
	include nginx.well-known.conf;


	####	SSL Inclusion
	include nginx.ssl.conf;

}
